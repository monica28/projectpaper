# Licensed Materials - Property of IBM
# 5725-I43 (C) Copyright IBM Corp. 2011, 2013. All Rights Reserved.
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
# Server Core Properties File
#
#
#  Default English locale Message text for Server core.
#  Allowable range FWLSE0000-FWLSE0999 
#
#  Caution: because some text editors automatically convert
#  consecutive runs of spaces to tabs, use the Java "\\ " escape
#  sequence to represent each space in a run of multiple spaces.
#
#  translator:
#  Translate words on the right hand side of the = sign.
#  Do not translate {0}, {1}, %1, %2 etc.
#  Preserve all spaces after a backslash (\\) even at the end of a line.
#
#  Allowable range FWLRU6000-FWLRU6999 
#
#  The following NLS Encoding line is required by the translation process.  CheckPII fails without it. 
#  It is used to describe the code page of this source file.
#
# NLS_ENCODING=UNICODE
#
#  The following NLS MessageFormat line is required by the translation process.    CheckPII fails without it.
#  Each string is assumed to be processed by the MessageFormat class (single quote must be coded as 2 consecutive single quotes ''). 
#
# NLS_MESSAGEFORMAT_ALL 
# PII admin facing

# Messages from worklight-android\src\main\java\com\worklight\androidgap\WLDroidGap.java
nativepage.returned.result.code  = FWLRU6001D : Code returned from NativePage is {0}.
problem.deleting.directory  = FWLRU6002E : Failed deleting directory %s. This might happen if the application was installed, then the shareduserID  in AndroidManifest.xml was changed, and the application was redeployed.
error.closing.resourcesSizeInputStream  = FWLRU6003D : Failed to close input stream from file {0}, because {1}.
error.unpacking.resources.zip  = FWLRU6004E : Cannot install or update the application, because failed to extract the application''s web resources with {0}.
error.during.decryption.resources.zip  = FWLRU6005E : Cannot install or update the application, because failed to decrypt the application''s web resources with {0}.
failed.close.file.input.stream  = FWLRU6006D : Failed to close input stream from file {0}, because {1}.
failed.close.file.output.stream  = FWLRU6007D : Failed to close output stream from file {0}, because {1}.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\plugin\DeviceAuthPlugin.java
error.creating.jsw.header  = FWLRU6008E : Authentication with Worklight server failed, because device provisioning is unable to sign with current certificate with {0}.
error.obtaining.device.id = FWLRU6009E : Authentication with Worklight server failed, because device provisioning is unable to get device UUID with {0}.
error.creating.csr = FWLRU6010E : Authentication with Work light server failed, because device provisioning is unable sign CSR with {0}.
error.checking.device.auth = FWLRU6011E : Authentication with Worklight server failed, because failed to check if the required  certificate exists on the device with {0}.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\plugin\NetworkDetector.java
cannot.retrieve.wifi = FWLRU6012W : Diagnostics information is missing Wi-Fi info with {0}.  Ensure application permission ACCESS_WIFI_STATE in AndroidManifest.xml.
cannot.retrieve.network.diag.data  = FWLRU6013W : Diagnostics information is missing because of {0}.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\plugin\Push.java
android.version.no.push.support  = FWLRU6014E : Android SDK version {0}  is not supported. 
push.service.error  = FWLRU6015E : Registering to notification failed because {0}.
gcm.registration.debug.notifying.js  = FWLRU6016D : Successfully registered to  GCM notification service with token id {0}.
gcm.registration.error.not.notifying.js  = FWLRU6017E : Push notification will not be served by the application because Worklight runtime failed to register a callback function.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\plugin\Utils.java
failed.to.open.url.bad.format  = FWLRU6018E : WL.App.openURL failed to open web page with URL {0}, because of incorrect URL format.
no.skin.defined.loading.default  = FWLRU6019W : "default" skin will be used, because skin named {0} was not found. Add a skin or change android/js/skinLoader.js to return existing skin.

# Messages from src\main\java\com\worklight\androidgap\plugin\WebResourcesDownloaderPlugin.java
unable.to.show.units.title  = FWLRU6020W : Progress bar will be displayed without units, because {0}.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\plugin\WLOptionsMenu.java
android.menu.item.already.exists  = FWLRU6021E : WL.OptionMenu.addItem failed because an item with id {0} already exists. Use unique id-s.
android.menu.item.does.not.exist  = FWLRU6022E : WL.OptionMenu.getItem failed because an item with id {0} does not exist.

# Messages from worklight-android\src\main\java\com\worklight\androidgap\push\WLGCMIntentService.java
cannot.find.resource  = FWLRU6023E : Push notification icon or title may not be displayed properly, because resource {0} was not found.  Add icon to native/res/drawable, or add <string ="push_notification_title">title</string> in native/res/values/strings.xml.
problem.parsing.badge  = FWLRU6024E : Unable to update badge while received push notification, failed to parse badge number {0}, badge must be an integer number.
received.error  = FWLRU6025E : Push notification will not work, because register/unregister to GCM service returned error {0}.
received.recoverable.error  = FWLRU6026E : Push notification will not work, because register/unregister to GCM service returned error {0}.
cannot.find.sound  = FWLRU6027E : Push notification sound will not be used because sound file name {0} was not found.   Add {0} to native/res/raw folder.  

# Messages from worklight-android\src\main\java\com\worklight\common\WLUtils.java
web.resource.checksum.different  = FWLRU6028E : Application failed to load, because its checksum {0} does not match {1}.  This may indicate unintended change to the application.
problem.reading.resource  = FWLRU6029E : Application failed to load, because checksum was not calculated for file {0} with {1}.  

# Messages from worklight-android\src\main\java\com\worklight\common\security\WLDeviceAuthManager.java
error.checking.cert.exists  = FWLRU6030D : Failed to determine the existence of certificate for device authentication with  {0}.
error.saving.cert  = FWLRU6031E : Certificate for device authentication could not be saved with {0}.
# error.checking.cert.exists  = FWLRU6032D : Failed to determine the existence of certificate for device authentication with  {0}.
error.copying.cert  = FWLRU6033W : Failed copying certificate for device authentication with  {0}, device authentication certificate will recreate.
error.saving.device.id  = FWLRU6034E : Device UUID could not be saved for authentication with {0}.
failed.getting.device.id.local.keystore  = FWLRU6035D : Failed to get device UUID from local keystore file with  {0}.
failed.copying.device.id.local.keystore  = FWLRU6036D : Failed copying Device UUID from same sharedUserId applications file to local application keystore with  {0}.

# Messages from worklight-android\src\main\java\com\worklight\utils\PaidSecurityUtils.java
problem.in.kpg  = FWLRU6037E : Application will exit because authentication failed.

# Messages from worklight-android\src\main\java\com\worklight\utils\SecurityUtils.java
algorithm.not.supported.on.device = FWLRU6037E: {0} is not supported on this device.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\WLCookieManager.java
cannot.parse.cookies.for.header  = FWLRU6038D : Response {0} from Worklight server failed because cookies could not be extracted from http header with {1}.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\api\WLPush.java
gcmregistrar.class.not.available  = FWLRU6039E : Push notification will not work because GCMRegistrar class is not available. Check if gcm.jar is available in the path.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\WLRequest.java
unknown.challenge.cannot.process  = FWLRU6040E : Application will exit, because unexpected challenge handler arrived while using realm {0}.  Register the challenge handler using registerChallengeHandler().
exception.processing.401  = FWLRU6041D : Wrong JSON arrived when processing a challenge in a 401 response: {0}.
exception.processing.403  = FWLRU6042D : Wrong JSON arrived when processing a challenge in a 403 response: {0}.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\api\WLClient.java
cannot.invokeprocedure.before.connect  = FWLRU6043E : invokeProcedure() will not be executed because WLCLient is not initialized, ensure WLCLient.connect function has been called.  
cannot.logactivity.before.connect  = FWLRU6044E : logActivity() will not be executed because WLCLient is not initialized, ensure WLCLient.connect function has been called.  
cannot.register.challenge.handler.no.realm  = FWLRU6045E : Application will exit because the challengeHandler parameter for registerChallengeHandler (challengeHandler) has a null realm property. Call this API with a valid reference to challenge handler. 
logactivity.failure  = FWLRU6046E : Activity will not be logged in Worklight server using logActivity() because of {0}

# Messages from worklight-android\src\main\java\com\worklight\wlclient\api\WLFailResponse.java
exception.reading.response.error = FWLRU6047D : Additional error information is not available for the current response {0} and response text {1}.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\api\WLResponse.java
exception.reading.response.body  = FWLRU6060E : Response from Worklight server failed because could not read not read text from response {1}.
exception.converting.http.response.to.json  = FWLRU6061E : Response from Worklight server failed because could not read JSON from response with text {1}.

# Messages from worklight-android\src\main\java\com\worklight\wlclient\challengehandler\AntiXSRFChallengeHandler.java
protocol.error.parsing.json.object  = FWLRU6062E : Application will exit because wrong JSON arrived when processing it from AntiXSRFChallengeHandler with {0}

# Messages from worklight-android\src\main\java\com\worklight\wlclient\api\WLPush.java
cannot.register.event.source.callback = FWLRU6050E: Cannot register to event source callback with alias: {0}, adapter: {1}, eventSource: {2}
cannot.register.event.source.callback.existing.alias = FWLRU6051E: Cannot register to event source callback with existing alias: {0}
error.subscribing.for.notifications = FWLRU6052E: Error subscribing for notifications.
error.unsubscribing.from.notifications = FWLRU6053E: Error unsubscribing from notifications.
cannot.subscribe.token.not.updated.on.server = FWLRU6054E: Cannot subscribe because the notification token is not updated on the server.
no.registered.push.event.source = FWLRU6055E: No registered push event source for alias ''{0}''.
info.for.unexpected.push.service.error = FWLRU6056E: Additional information for unexpected push service error: {0}
unsuccessful.registration = FWLRU6057E: Unsuccessful registration: {0}
error.updating.notification.subscriptions = FWLRU6058E: Error in updating notification subscriptions: {0}
failed.invoking.notification.callback = FWLRU6059E: Failed invoking notification callback function: {0}
failed.processing.pending.push.events = FWLRU6060E: Failed processing pending push events: {0}
failed.update.token.on.server = FWLRU6061E: Failed to update token on server.

